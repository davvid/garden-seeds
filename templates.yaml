garden:
  includes: variables.yaml

templates:
  bin:
    description: Add ${TREE_PATH}/bin to ${PATH}.
    environment:
      PATH: "${TREE_PATH}/bin"

  git-annex-ignore:
    variables:
      git-annex-ignore-remote: origin
    description: |
      Configure git-annex to ignore the origin repository. This is needed when
      origin contains only metadata and the data is replacated across multiple worktrees
      using git-annex.
    gitconfig:
      remote.${git-annex-ignore-remote}.annex-ignore: true

  makefile:
    variables:
      make-cmd: make -j${num-procs} DESTDIR="${DESTDIR}" prefix="${prefix}"
    commands:
      build: ${make-cmd} all "$@"
      install: ${make-cmd} install "$@"
      test: ${make-cmd} test "$@"

  python:
    description: |
      Setup a Python virtualenv named after the current Python version.
      Add envXY/bin to ${PATH} to activate the virtualenv.
      Add ${TREE_PATH} to ${PYTHONPATH} to make the modules available.
    environment:
      PATH: ${TREE_PATH}/${py_venv}/bin
      PYTHONPATH: "${TREE_PATH}"
    commands:
      setup: |
        test -d ${py_venv} || ${python} -m venv ${py_venv_args} ${py_venv}
        pip install --upgrade pip
        pip install wheel

  rust:
    variables:
      cargo-build-args: $ test "${build-mode}" = release && printf '%s' --release
    environment:
      PATH: "${TREE_PATH}/target/${build-mode}"
    commands:
      build: cargo build ${cargo-build-args} "$@"
      check: |
        cargo check "$@"
        cargo clippy --all "$@" -- -D warnings
        cargo fmt --check "$@"
      check/clippy: cargo clippy --fix "$@" -- -D warnings
      check/fmt: cargo fmt --check "$@"
      clean: cargo clean "$@"
      doc: cargo doc "$@"
      fmt: cargo fmt "$@"
      publish: cargo publish "$@"
      run: cargo run "$@"
      test: cargo test "$@"
      update: cargo update "$@"
...
